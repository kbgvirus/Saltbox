###########################################################################
# Title:         Saltbox: Resources | Tasks | Instances | Get Lidarr Info #
# Author(s):     salty                                                    #
# URL:           https://github.com/saltyorg/Saltbox                      #
# --                                                                      #
###########################################################################
#                   GNU General Public License v3.0                       #
###########################################################################
---
- name: Resources | Tasks | Instances | Get Info | Check if Lidarr exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_config_location', role='lidarr') }}"
  register: lidarr_paths_config_location_stat

- name: Resources | Tasks | Instances | Get Info | Lidarr API Key tasks
  when: lidarr_paths_config_location_stat.stat.exists
  block:
    - name: Resources | Tasks | Instances | Get Info | Fetch Lidarr API Key
      community.general.xml:
        path: "{{ lookup('role_var', '_paths_config_location', role='lidarr') }}"
        xpath: /Config/ApiKey
        content: text
      register: xmlresp

    - name: Resources | Tasks | Instances | Get Info | Set 'lidarr_info' variable
      ansible.builtin.set_fact:
        lidarr_info: "{{ lidarr_info | default({}) | combine({lidarr_name: {'name': lidarr_name, 'url': lookup('role_var', '_web_url', role='lidarr'), 'api_key': xmlresp.matches[0].ApiKey}}) }}"

- name: Resources | Tasks | Instances | Get Info | Set 'lidarr_info' variable
  ansible.builtin.set_fact:
    lidarr_info: "{{ lidarr_info | default({}) | combine({lidarr_name: {'name': lidarr_name, 'url': lookup('role_var', '_web_url', role='lidarr'), 'api_key': 'not installed'}}) }}"
  when: (not lidarr_paths_config_location_stat.stat.exists)

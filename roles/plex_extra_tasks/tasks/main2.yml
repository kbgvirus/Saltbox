#########################################################################
# Title:         Saltbox: Plex Extra Tasks Role                         #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Wait for '{{ plex_role_paths_config_location | basename }}' to be created
  ansible.builtin.wait_for:
    path: "{{ plex_role_paths_config_location }}"
    state: present

- name: Wait for {{ plex_name | title }} DB to be created
  ansible.builtin.wait_for:
    path: "{{ plex_role_paths_db_location }}"
    state: present

- name: Wait for {{ plex_name | title }} executable to be created
  ansible.builtin.shell: docker exec {{ plex_docker_container }} bash -c "ls '/usr/lib/plexmediaserver/Plex Media Server'"
  register: pms_check
  until: pms_check.stderr.find("No such file or directory") == -1
  retries: 600
  changed_when: false
  failed_when: pms_check.rc == 1 or pms_check.rc > 2

- name: Wait until Plex instance returns expected status code
  ansible.builtin.uri:
    url: "http://{{ plex_extra_tasks_hostname }}:32400/web/index.html"
    method: GET
    status_code: [200]
  register: plex_status_result
  until: plex_status_result.status == 200
  retries: 150
  delay: 10

- name: Stop Docker Container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/stop_docker_container.yml"
  vars:
    var_prefix: "plex"

- name: Ensure transcodes folder has the correct permissions
  ansible.builtin.file:
    path: "{{ plex_role_paths_transcodes_location }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    recurse: true

- name: Find external port binding for '{{ plex_docker_container }}' docker port '{{ plex_web_port }}'
  when: plex_open_main_ports
  block:
    - name: Lookup host port mapped to '{{ plex_docker_container }}' docker port '{{ plex_web_port }}'
      ansible.builtin.shell: docker port {{ plex_docker_container }} {{ plex_web_port }} 2> /dev/null | sed 's/[0-9.]*://'
      register: plex_docker_port_lookup_cmd
      changed_when: false

    - name: Set port variable
      ansible.builtin.set_fact:
        plex_docker_port_lookup: "{{ (plex_docker_port_lookup_cmd.stdout | trim)
                                  if (plex_docker_port_lookup_cmd.stdout | trim | length > 0)
                                  else plex_web_port }}"

- name: Update port in '{{ plex_role_paths_config_location | basename }}'
  community.general.xml:
    path: "{{ plex_role_paths_config_location }}"
    xpath: /Preferences
    attribute: ManualPortMappingPort
    value: "{{ plex_docker_port_lookup | default(plex_web_port) }}"
    state: present
  become: true
  become_user: "{{ user.name }}"

- name: Disable Remote Access in '{{ plex_role_paths_config_location | basename }}'
  community.general.xml:
    path: "{{ plex_role_paths_config_location }}"
    xpath: /Preferences
    attribute: PublishServerOnPlexOnlineKey
    value: "0"
    state: present
  become: true
  become_user: "{{ user.name }}"

- name: Disable Relay in '{{ plex_role_paths_config_location | basename }}'
  community.general.xml:
    path: "{{ plex_role_paths_config_location }}"
    xpath: /Preferences
    attribute: RelayEnabled
    value: "0"
    state: present
  become: true
  become_user: "{{ user.name }}"

- name: Reset permissions of '{{ plex_role_paths_config_location | basename }}'
  ansible.builtin.file:
    path: "{{ plex_role_paths_config_location }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"

- name: "Install Sub-Zero Plugin"
  ansible.builtin.include_role:
    name: sub_zero
  when: lookup('vars', plex_name + '_plugin_sub_zero', default=plex_role_plugin_sub_zero)

- name: "Install WebTools Plugin"
  ansible.builtin.include_role:
    name: webtools
  when: lookup('vars', plex_name + '_plugin_webtools', default=plex_role_plugin_webtools)

- name: Start Docker Container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/start_docker_container.yml"
  vars:
    var_prefix: "plex"
